/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package racingcar;

import static java.util.stream.Collectors.*;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;
import utils.RandomUtils;

public class App {

    private static final String SEPARATOR = ",";
    private static final int MAXIMUM_TRIAL = 100;
    private static final int MAXIMUM_CAR_NAME_LENGTH = 5;
    private static final int MINIMUM_PLAYER = 2;
    private static final int MAXIMUM_PLAYER = 10;

    public static void main(String[] args) {
        final Scanner scanner = new Scanner(System.in);

        List<Car> cars = makeCars(scanner);
        int trial = getTrial(scanner);
        List<Car> winners = runGame(cars, trial);
        System.out.println(getResultMessage(winners));
    }

    private static String getResultMessage(List<Car> winners) {
        return "최종 우승자: " + winners.stream()
            .map(Car::getName)
            .collect(joining(", "));
    }

    private static List<Car> getWinners(List<Car> cars) {
        Car max = Collections.max(cars);
        return cars.stream()
            .filter(car -> car.isSamePositionWith(max))
            .collect(toList());
    }

    private static List<Car> runGame(List<Car> cars, int trial) {
        System.out.println("실행 결과");
        for (int i = 0; i < trial; i++) {
            runPhase(cars);
        }
        return getWinners(cars);
    }

    private static void runPhase(List<Car> cars) {
        for (Car car : cars) {
            car.move(RandomUtils.nextInt(0, 9));
            System.out.println(car);
        }
        System.out.println();
    }

    private static int getTrial(Scanner scanner) {
        System.out.println("시도횟수를 입력해주세요");
        try {
            int input = scanner.nextInt();
            validateTrial(input);
            return input;
        } catch (IllegalArgumentException e) {
            System.out.println(e.getMessage());
            return getTrial(scanner);
        }
    }

    private static List<Car> makeCars(Scanner scanner) {
        List<Car> result = new ArrayList<>();
        System.out.print("참가자를 입력해주세요.(,로 구분): ");

        try {
            String[] names = splitNamesBySeparator(scanner.nextLine());
            for (String name : names) {
                validateCarName(name);
                result.add(new Car(name));
            }
        } catch (IllegalArgumentException e) {
            System.out.println(e.getMessage());
            return makeCars(scanner);
        }
        return result;
    }


    public static void validateCarName(String name) {
        if (name.isBlank()) {
            throw new IllegalArgumentException("[ERROR] 이름이 공백 혹은 빈 문자열입니다.");
        }
        if (name.length() > MAXIMUM_CAR_NAME_LENGTH) {
            throw new IllegalArgumentException("[ERROR] 이름은 5자 이하여아합니다.");
        }
    }

    public static void validateTrial(int trial) {
        if (trial > MAXIMUM_TRIAL) {
            throw new IllegalArgumentException("[ERROR] 시도 횟수는 100회 이하여야 합니다.");
        }
    }

    public static String[] splitNamesBySeparator(String input) {
        String[] names = input.split(SEPARATOR);
        if (names.length < MINIMUM_PLAYER) {
            throw new IllegalArgumentException("[ERROR] 참가자는 2인 이상이어야 합니다");
        }
        if (names.length > MAXIMUM_PLAYER) {
            throw new IllegalArgumentException("[ERROR] 참가자는 10인 이하여야 합니다.");
        }
        return names;
    }
}
